{\rtf1\ansi\ansicpg1251\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 using System;\
using System.Diagnostics;\
\
namespace Lab1asd\
\{\
    class Program\
    \{\
        static void NumberGenerator(int[] Vals, int n)\
        \{\
            Random aRand = new Random();\
            for (int i = 0; i < Vals.Length; i++)\
                Vals[i] = aRand.Next(n);\
        \}\
       \
        static void Task1()\
        \{\
           // Console.Clear();\
            Console.WriteLine("1. \uc0\u1055 \u1086 \u1096 \u1091 \u1082  \u1087 \u1077 \u1088 \u1077 \u1073 \u1086 \u1088 \u1086 \u1084 ");\
            Console.WriteLine("\uc0\u1054 \u1073 \u1077 \u1088 \u1110 \u1090 \u1100  \u1090 \u1080 \u1087  \u1076 \u1072 \u1085 \u1080 \u1093 , \u1079  \u1103 \u1082 \u1080 \u1084  \u1073 \u1091 \u1076 \u1077 \u1084 \u1086  \u1087 \u1088 \u1072 \u1094 \u1102 \u1074 \u1072 \u1090 \u1080 :");\
            Console.WriteLine("1. \uc0\u1052 \u1072 \u1089 \u1080 \u1074  2. \u1051 \u1110 \u1085 \u1110 \u1081 \u1085 \u1080 \u1081  \u1079 \u1074 \u700 \u1103 \u1079 \u1085 \u1080 \u1081  \u1089 \u1087 \u1080 \u1089 \u1086 \u1082 ");\
\
            int key = Convert.ToInt32(Console.ReadLine());\
            if (key == 1)\
            \{\
                int i, j=1 ,nom=0;\
                bool found = false;\
                Console.WriteLine("\uc0\u1042 \u1074 \u1077 \u1076 \u1110 \u1090 \u1100  \u1088 \u1086 \u1079 \u1084 \u1110 \u1088  \u1084 \u1072 \u1089 \u1080 \u1074 \u1091 ");\
                int n = int.Parse(Console.ReadLine());\
                int[] mas = new int[n]; \
                Console.WriteLine("\uc0\u1047 \u1075 \u1077 \u1085 \u1077 \u1088 \u1091 \u1108 \u1084 \u1086  \u1084 \u1072 \u1089 \u1080 \u1074  ");\
                NumberGenerator(mas, n);\
                for ( i = 0; i < n; i++)\
                \{\
                    Console.Write(mas[i] + " ");\
                \}\
                Console.WriteLine("\\n \uc0\u1042 \u1074 \u1077 \u1076 \u1110 \u1090 \u1100  \u1096 \u1091 \u1082 \u1072 \u1085 \u1080 \u1081  \u1077 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 ");\
                int elem = int.Parse(Console.ReadLine());\
\
                var timer = new Stopwatch();\
                timer.Start();\
                while ((j < n) && (found == false))\
                \{\
                    if (mas[j]==elem)\
                    \{\
                        nom = j;\
                        found = true;\
                    \}\
                    j++;\
                \}\
                timer.Stop();\
\
                if (found == true)\
                    Console.WriteLine("\uc0\u1045 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090  \u1079 \u1085 \u1072 \u1081 \u1076 \u1077 \u1085 \u1086  \u1079  \u1110 \u1085 \u1076 \u1077 \u1082 \u1089 \u1086 \u1084  " + nom);\
                else if (j == n)\
                    Console.WriteLine("\uc0\u1062 \u1100 \u1086 \u1075 \u1086  \u1077 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 \u1091  \u1085 \u1077 \u1084 \u1072 \u1108  \u1091  \u1084 \u1072 \u1089 \u1080 \u1074 \u1110 ");\
\
                Console.WriteLine("\uc0\u1042 \u1080 \u1090 \u1088 \u1072 \u1095 \u1077 \u1085 \u1086  \u1095 \u1072 \u1089 \u1091 : " + timer.Elapsed);\
                Console.WriteLine("\uc0\u1042 \u1080 \u1090 \u1088 \u1072 \u1095 \u1077 \u1085 \u1086  \u1095 \u1072 \u1089 \u1091  \u1074  \u1084 \u1110 \u1083 \u1110 \u1089 \u1077 \u1082 \u1091 \u1085 \u1076 \u1072 \u1093 : " + timer.ElapsedTicks);\
                Console.ReadKey();\
            \}\
            else if(key == 2)\
            \{\
               Console.WriteLine("\\n \uc0\u1042  \u1087 \u1088 \u1086 \u1094 \u1077 \u1089 \u1110  \u1088 \u1086 \u1079 \u1088 \u1086 \u1073 \u1082 \u1080  :(");\
            \}\
            else Console.WriteLine("\\n \uc0\u1042 \u1074 \u1077 \u1076 \u1110 \u1090 \u1100  1 \u1072 \u1073 \u1086  2");\
        \}\
\
\
        static void Task2()\
        \{\
            //Console.Clear();\
            Console.WriteLine("2. \uc0\u1055 \u1086 \u1096 \u1091 \u1082  \u1079  \u1073 \u1072 \u1088 '\u1108 \u1088 \u1086 \u1084 \\n");\
            Console.WriteLine("\uc0\u1054 \u1073 \u1077 \u1088 \u1110 \u1090 \u1100  \u1090 \u1080 \u1087  \u1076 \u1072 \u1085 \u1080 \u1093 , \u1079  \u1103 \u1082 \u1080 \u1084  \u1073 \u1091 \u1076 \u1077 \u1084 \u1086  \u1087 \u1088 \u1072 \u1094 \u1102 \u1074 \u1072 \u1090 \u1080 :");\
            Console.WriteLine("1. \uc0\u1052 \u1072 \u1089 \u1080 \u1074  2. \u1051 \u1110 \u1085 \u1110 \u1081 \u1085 \u1080 \u1081  \u1079 \u1074 \u700 \u1103 \u1079 \u1085 \u1080 \u1081  \u1089 \u1087 \u1080 \u1089 \u1086 \u1082 ");\
            int key = Convert.ToInt32(Console.ReadLine());\
\
            if (key == 1)\
            \{\
                int i;\
                Console.WriteLine("\uc0\u1042 \u1074 \u1077 \u1076 \u1110 \u1090 \u1100  \u1088 \u1086 \u1079 \u1084 \u1110 \u1088  \u1084 \u1072 \u1089 \u1080 \u1074 \u1091 ");\
                int n = int.Parse(Console.ReadLine());\
                int[] mas = new int[n+2];\
                Console.WriteLine("\uc0\u1047 \u1075 \u1077 \u1085 \u1077 \u1088 \u1091 \u1108 \u1084 \u1086  \u1084 \u1072 \u1089 \u1080 \u1074  ");\
                NumberGenerator(mas, n);\
                for (i = 0; i < n; i++)\
                \{\
                    Console.Write(mas[i] + " ");\
                \}\
                Console.WriteLine("\\n \uc0\u1042 \u1074 \u1077 \u1076 \u1110 \u1090 \u1100  \u1096 \u1091 \u1082 \u1072 \u1085 \u1080 \u1081  \u1077 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 ");\
                int elem = int.Parse(Console.ReadLine());\
                int j=1;\
                mas[n+1] = elem;\
                var timer = new Stopwatch();\
                timer.Start();\
                while (mas[j] != elem)\
                    j++;\
                timer.Stop();\
                if (j <= n) Console.WriteLine("\uc0\u1045 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090  \u1079 \u1085 \u1072 \u1081 \u1076 \u1077 \u1085 \u1086  \u1079  \u1110 \u1085 \u1076 \u1077 \u1082 \u1089 \u1086 \u1084  " + j);\
                else Console.WriteLine("\uc0\u1062 \u1100 \u1086 \u1075 \u1086  \u1077 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 \u1091  \u1085 \u1077 \u1084 \u1072 \u1108  \u1091  \u1084 \u1072 \u1089 \u1080 \u1074 \u1110 ");\
\
                Console.WriteLine("\uc0\u1042 \u1080 \u1090 \u1088 \u1072 \u1095 \u1077 \u1085 \u1086  \u1095 \u1072 \u1089 \u1091 : " + timer.Elapsed);\
                Console.WriteLine("\uc0\u1042 \u1080 \u1090 \u1088 \u1072 \u1095 \u1077 \u1085 \u1086  \u1095 \u1072 \u1089 \u1091  \u1074  \u1084 \u1110 \u1083 \u1110 \u1089 \u1077 \u1082 \u1091 \u1085 \u1076 \u1072 \u1093 : " + timer.ElapsedTicks);\
                Console.ReadKey();\
            \}\
\
            else if (key == 2)\
            \{\
                Console.WriteLine("\\n \uc0\u1042  \u1087 \u1088 \u1086 \u1094 \u1077 \u1089 \u1110  \u1088 \u1086 \u1079 \u1088 \u1086 \u1073 \u1082 \u1080  :(");\
            \}\
            else Console.WriteLine("\\n \uc0\u1042 \u1074 \u1077 \u1076 \u1110 \u1090 \u1100  1 \u1072 \u1073 \u1086  2");\
\
        \}\
\
        static void Task3()\
        \{\
            \
            //Console.Clear();\
            Console.WriteLine("3. \uc0\u1041 \u1110 \u1085 \u1072 \u1088 \u1085 \u1080 \u1081  \u1087 \u1086 \u1096 \u1091 \u1082 \\n");\
            Console.WriteLine("\uc0\u1054 \u1073 \u1077 \u1088 \u1110 \u1090 \u1100  \u1090 \u1080 \u1087  \u1076 \u1072 \u1085 \u1080 \u1093 , \u1079  \u1103 \u1082 \u1080 \u1084  \u1073 \u1091 \u1076 \u1077 \u1084 \u1086  \u1087 \u1088 \u1072 \u1094 \u1102 \u1074 \u1072 \u1090 \u1080 :");\
            Console.WriteLine("1. \uc0\u1052 \u1072 \u1089 \u1080 \u1074  2. \u1051 \u1110 \u1085 \u1110 \u1081 \u1085 \u1080 \u1081  \u1079 \u1074 \u700 \u1103 \u1079 \u1085 \u1080 \u1081  \u1089 \u1087 \u1080 \u1089 \u1086 \u1082 ");\
            int key = Convert.ToInt32(Console.ReadLine());\
\
            if (key == 1)\
            \{\
               \
                int i, nom=0;\
                Console.WriteLine("\uc0\u1042 \u1074 \u1077 \u1076 \u1110 \u1090 \u1100  \u1088 \u1086 \u1079 \u1084 \u1110 \u1088  \u1084 \u1072 \u1089 \u1080 \u1074 \u1091 ");\
                int n = int.Parse(Console.ReadLine());\
                int[] mas = new int[n+1];\
                Console.WriteLine("\uc0\u1047 \u1075 \u1077 \u1085 \u1077 \u1088 \u1091 \u1108 \u1084 \u1086  \u1084 \u1072 \u1089 \u1080 \u1074  ");\
                NumberGenerator(mas, n);\
                Array.Sort(mas);\
                for (i = 0; i < n; i++)\
                \{\
                    Console.Write(mas[i] + " ");\
                \}\
                Console.WriteLine("\\n \uc0\u1042 \u1074 \u1077 \u1076 \u1110 \u1090 \u1100  \u1096 \u1091 \u1082 \u1072 \u1085 \u1080 \u1081  \u1077 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 ");\
                int elem = int.Parse(Console.ReadLine());\
                int left = 0;\
                int right = n;\
                bool found = false;\
\
                var timer = new Stopwatch();\
                timer.Start();\
                while ((left <= right) && (found == false))\
                \{\
                    int m = (left + right) / 2;\
                    if (mas[m] == elem)\
                    \{\
                        found = true;\
                        nom = m;\
                    \}\
                    else if (mas[m] < elem)\
                        left = m + 1;\
                    else right = m - 1;\
                \}\
                timer.Stop();\
                if (found == true)\
                    Console.WriteLine("\uc0\u1045 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090  \u1079 \u1085 \u1072 \u1081 \u1076 \u1077 \u1085 \u1086  \u1079  \u1110 \u1085 \u1076 \u1077 \u1082 \u1089 \u1086 \u1084  " + nom);\
                else if (found == false)\
                    Console.WriteLine("\uc0\u1062 \u1100 \u1086 \u1075 \u1086  \u1077 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 \u1091  \u1085 \u1077 \u1084 \u1072 \u1108  \u1091  \u1084 \u1072 \u1089 \u1080 \u1074 \u1110 ");\
\
                Console.WriteLine("\uc0\u1042 \u1080 \u1090 \u1088 \u1072 \u1095 \u1077 \u1085 \u1086  \u1095 \u1072 \u1089 \u1091 : " + timer.Elapsed);\
                Console.WriteLine("\uc0\u1042 \u1080 \u1090 \u1088 \u1072 \u1095 \u1077 \u1085 \u1086  \u1095 \u1072 \u1089 \u1091  \u1074  \u1084 \u1110 \u1083 \u1110 \u1089 \u1077 \u1082 \u1091 \u1085 \u1076 \u1072 \u1093 : " + timer.ElapsedTicks);\
                Console.ReadKey();\
            \}\
            else if (key == 2)\
            \{\
                Console.WriteLine("\\n \uc0\u1042  \u1087 \u1088 \u1086 \u1094 \u1077 \u1089 \u1110  \u1088 \u1086 \u1079 \u1088 \u1086 \u1073 \u1082 \u1080  :(");\
            \}\
            else Console.WriteLine("\\n \uc0\u1042 \u1074 \u1077 \u1076 \u1110 \u1090 \u1100  1 \u1072 \u1073 \u1086  2");\
\
        \}\
\
        static void Task4()\
        \{\
            //Console.Clear();\
            Console.WriteLine("4. \uc0\u1041 \u1110 \u1085 \u1072 \u1088 \u1085 \u1080 \u1081  \u1087 \u1086 \u1096 \u1091 \u1082  \u1079 \u1072  \u1087 \u1088 \u1072 \u1074 \u1080 \u1083 \u1086 \u1084  \u1079 \u1086 \u1083 \u1086 \u1090 \u1086 \u1075 \u1086  \u1087 \u1077 \u1088 \u1077 \u1088 \u1110 \u1079 \u1091 \\n");\
            Console.WriteLine("\uc0\u1054 \u1073 \u1077 \u1088 \u1110 \u1090 \u1100  \u1090 \u1080 \u1087  \u1076 \u1072 \u1085 \u1080 \u1093 , \u1079  \u1103 \u1082 \u1080 \u1084  \u1073 \u1091 \u1076 \u1077 \u1084 \u1086  \u1087 \u1088 \u1072 \u1094 \u1102 \u1074 \u1072 \u1090 \u1080 :");\
            Console.WriteLine("1. \uc0\u1052 \u1072 \u1089 \u1080 \u1074  2. \u1051 \u1110 \u1085 \u1110 \u1081 \u1085 \u1080 \u1081  \u1079 \u1074 \u700 \u1103 \u1079 \u1085 \u1080 \u1081  \u1089 \u1087 \u1080 \u1089 \u1086 \u1082 ");\
            int key = Convert.ToInt32(Console.ReadLine());\
\
            if (key == 1)\
            \{\
                int i, nom = 0;\
                Console.WriteLine("\uc0\u1042 \u1074 \u1077 \u1076 \u1110 \u1090 \u1100  \u1088 \u1086 \u1079 \u1084 \u1110 \u1088  \u1084 \u1072 \u1089 \u1080 \u1074 \u1091 ");\
                int n = int.Parse(Console.ReadLine());\
                int[] mas = new int[n + 1];\
                Console.WriteLine("\uc0\u1047 \u1075 \u1077 \u1085 \u1077 \u1088 \u1091 \u1108 \u1084 \u1086  \u1084 \u1072 \u1089 \u1080 \u1074  ");\
                NumberGenerator(mas, n);\
                Array.Sort(mas);\
                for (i = 0; i < n; i++)\
                \{\
                    Console.Write(mas[i] + " ");\
                \}\
                Console.WriteLine("\\n \uc0\u1042 \u1074 \u1077 \u1076 \u1110 \u1090 \u1100  \u1096 \u1091 \u1082 \u1072 \u1085 \u1080 \u1081  \u1077 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 ");\
                int elem = int.Parse(Console.ReadLine());\
                int left = 0;\
                int right = n;\
                bool found = false;\
                var timer = new Stopwatch();\
                timer.Start();\
                while ((left <= right) && (found == false))\
                \{\
                    int m = (int) (left + 0.618 * (right - left));\
                    if (mas[m] == elem)\
                    \{\
                        found = true;\
                        nom = m;\
                    \}\
                    else if (mas[m] < elem)\
                        left = m + 1;\
                    else right = m - 1;\
                \}\
                timer.Stop();\
                if (found == true)\
                    Console.WriteLine("\uc0\u1045 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090  \u1079 \u1085 \u1072 \u1081 \u1076 \u1077 \u1085 \u1086  \u1079  \u1110 \u1085 \u1076 \u1077 \u1082 \u1089 \u1086 \u1084  " + nom);\
                else if (found == false)\
                    Console.WriteLine("\uc0\u1062 \u1100 \u1086 \u1075 \u1086  \u1077 \u1083 \u1077 \u1084 \u1077 \u1085 \u1090 \u1091  \u1085 \u1077 \u1084 \u1072 \u1108  \u1091  \u1084 \u1072 \u1089 \u1080 \u1074 \u1110 ");\
\
                Console.WriteLine("\uc0\u1042 \u1080 \u1090 \u1088 \u1072 \u1095 \u1077 \u1085 \u1086  \u1095 \u1072 \u1089 \u1091 : " + timer.Elapsed);\
                Console.WriteLine("\uc0\u1042 \u1080 \u1090 \u1088 \u1072 \u1095 \u1077 \u1085 \u1086  \u1095 \u1072 \u1089 \u1091  \u1074  \u1084 \u1110 \u1083 \u1110 \u1089 \u1077 \u1082 \u1091 \u1085 \u1076 \u1072 \u1093 : " + timer.ElapsedTicks);\
                Console.ReadKey();\
            \}\
            else if (key == 2)\
            \{\
                Console.WriteLine("\\n \uc0\u1042  \u1087 \u1088 \u1086 \u1094 \u1077 \u1089 \u1110  \u1088 \u1086 \u1079 \u1088 \u1086 \u1073 \u1082 \u1080  :(");\
            \}\
            else Console.WriteLine("\\n \uc0\u1042 \u1074 \u1077 \u1076 \u1110 \u1090 \u1100  1 \u1072 \u1073 \u1086  2");\
        \}\
\
        static void Test()\
        \{\
            Console.Clear();\
            Console.ReadKey();\
            double phi = 1.6;\
            Console.WriteLine("phi = " + phi);\
        \}\
        static void Main()\
        \{\
            Console.WriteLine("\\n \uc0\u1041 \u1086 \u1081 \u1082 \u1086  \u1050 \u1086 \u1089 \u1090 \u1103 \u1085 \u1090 \u1080 \u1085  \u1041 \u1086 \u1075 \u1076 \u1072 \u1085 \u1086 \u1074 \u1080 \u1095  \\n");\
            Console.WriteLine("\\n \\n \uc0\u1051 \u1072 \u1073 \u1086 \u1088 \u1072 \u1090 \u1086 \u1088 \u1085 \u1072  \u1088 \u1086 \u1073 \u1086 \u1090 \u1072  1");\
            Console.ResetColor();\
            Console.WriteLine("\uc0\u1047 \u1072 \u1074 \u1076 \u1072 \u1085 \u1085 \u1103 :");\
            Console.WriteLine("1. \uc0\u1055 \u1086 \u1096 \u1091 \u1082  \u1087 \u1077 \u1088 \u1077 \u1073 \u1086 \u1088 \u1086 \u1084 ");\
            Console.WriteLine("2. \uc0\u1055 \u1086 \u1096 \u1091 \u1082  \u1079  \u1073 \u1072 \u1088 '\u1108 \u1088 \u1086 \u1084 ");\
            Console.WriteLine("3. \uc0\u1041 \u1110 \u1085 \u1072 \u1088 \u1085 \u1080 \u1081  \u1087 \u1086 \u1096 \u1091 \u1082 ");\
            Console.WriteLine("4. \uc0\u1041 \u1110 \u1085 \u1072 \u1088 \u1085 \u1080 \u1081  \u1087 \u1086 \u1096 \u1091 \u1082  \u1079 \u1072  \u1087 \u1088 \u1072 \u1074 \u1080 \u1083 \u1086 \u1084  \u1079 \u1086 \u1083 \u1086 \u1090 \u1086 \u1075 \u1086  \u1087 \u1077 \u1088 \u1077 \u1088 \u1110 \u1079 \u1091 ");\
            Console.WriteLine("\uc0\u1044 \u1083 \u1103  \u1079 \u1072 \u1074 \u1077 \u1088 \u1096 \u1077 \u1085 \u1085 \u1103  \u1088 \u1086 \u1073 \u1086 \u1090 \u1080  \u1085 \u1072 \u1090 \u1080 \u1089 \u1085 \u1110 \u1089 \u1090 \u1100  i\u1085 \u1096 \u1091  \u1082 \u1083 \u1072 \u1074 i\u1096 \u1091 ");\
            Console.WriteLine("\uc0\u1042 \u1080 \u1073 \u1077 \u1088 i\u1090 \u1100  \u1079 \u1072 \u1074 \u1076 \u1072 \u1085 \u1085 \u1103 :");\
                int key = Convert.ToInt32(Console.ReadLine());\
            switch (key)\
            \{\
                case 1: Task1(); Main(); break;\
                case 2: Task2(); Main(); break;\
                case 3: Task3(); Main(); break;\
                case 4: Task4(); Main(); break;\
                case 5: Test(); Main(); break;\
                default: break;\
            \}\
        \}\
    \}\
\}\
}