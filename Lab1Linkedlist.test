using System;
using System.Diagnostics;
public class Item
{
	
	public Item(int dt)
	{
		data = dt;
		next = null;
	}
	public int data;
	public Item next;

}

class Program
{
	//зворотне створення списка
	static Item push(Item head, int data)
	{
		Item newItem = new Item(data);
		newItem.next = head;
		head = newItem;
		return head;
	}


	static int largeoflist;
	static int rangeofvalues;
	static Item head;
	static void Initialization()
	{
		Console.WriteLine("\nІніціалізація списку");
		Console.WriteLine("Введіть кількість елементів списку");
		largeoflist = Convert.ToInt32(Console.ReadLine());
		Console.WriteLine("Введіть діапазон значень елементів");
		rangeofvalues = Convert.ToInt32(Console.ReadLine());
		head = null;
		NumberGenerator(ref head, ref largeoflist, ref rangeofvalues);
		Console.WriteLine("\nЧи потрібно виводити згенерований список? 1. Так 2. Ні");
		int key = Convert.ToInt32(Console.ReadLine());
		Console.WriteLine();
		if (key == 1)
		{
			Listoutput(head);
		}
		Console.ReadKey();
	}

	static void NumberGenerator(ref Item head, ref int large, ref int range)
	{
		Random aRand = new Random();
		for (int i = 0; i < large; i++)
			head = push(head, (aRand.Next(range)));
	}

	static void Listoutput(Item head)
	{
		Console.WriteLine("\nЗгенерований список: ");
		Item element = head;
		while(element != null)
        {
			Console.Write(" " + element.data);
			element = element.next;
        }
	}
		static void Roughsearch(Item head)
    {
		Console.WriteLine("\nПошук перебором\n");
		Console.WriteLine("Введіть шуканий елемент");
		int x = Convert.ToInt32(Console.ReadLine());
		Item current = head;
		bool found = false;
		int i = 0;
		var timer = new Stopwatch();
		timer.Start();
		while ((i <= largeoflist)&& (found == false))
        {
			if (current.data == x)
			{
				found = true;
			}
			else
				current = current.next;
        }
		timer.Stop();
		if (found)
			Console.WriteLine("\nЕлемент знайдено");
		else
			Console.WriteLine("\nЕлемент не знайдено");
		Console.WriteLine("Витрачено часу: " + timer.Elapsed);
		Console.WriteLine("Витрачено часу в мілісекундах: " + timer.ElapsedTicks);
		Console.ReadKey();
	}

	static void Searchwithbarrier(Item head)
	{
		Console.WriteLine("\nПошук з барєром\n");
		Console.WriteLine("Введіть шуканий елемент");
		int x = Convert.ToInt32(Console.ReadLine());
		Item current = head;
		var timer = new Stopwatch();
		timer.Start();
		while (current.data != x)
                current = current.next;
		timer.Stop();
		if (current.data == x)
			Console.WriteLine("\nЕлемент знайдено");
		else
			Console.WriteLine("\nЕлемент не знайдено");
		Console.WriteLine("Витрачено часу: " + timer.Elapsed);
		Console.WriteLine("Витрачено часу в мілісекундах: " + timer.ElapsedTicks);
		Console.ReadKey();
	}

	static void sortList(Item head)
	{
		//Node current will point to head  
		Item current = head, index = null;
		int temp;

		if (head == null)
		{
			return;
		}
		else
		{
			while (current != null)
			{
				//Node index will point to node next to current  
				index = current.next;

				while (index != null)
				{
					//If current node's data is greater than index's node data, swap the data between them  
					if (current.data.CompareTo(index.data) > 0)
					{
						temp = current.data;
						current.data = index.data;
						index.data = temp;
					}
					index = index.next;
				}
				current = current.next;
			}
		}
	}

	static Item middleelement(Item first, Item last)
    {
		if (first == null)
			return null;

		Item left = first;
		Item right = first.next;

		while(right != last)
        {
			right = right.next;
			if(right != last)
            {
				left = left.next;
				right = right.next;
            }

        }
		return left;
    }
	static void BinarySearch(Item head)
    {
		Console.WriteLine("\nПошук з барєром\n");
		Console.WriteLine("Введіть шуканий елемент");
		int x = Convert.ToInt32(Console.ReadLine());
		Item first = head;
		Item last = null;
		do
		{
			Item middle = middleelement(first, last);//знаходимо середній елемент
			if (middle == null)
			{
				Console.WriteLine("\nЦього елемента немає у списку");
				return;
			}

			if (middle.data == x)
			{
				Console.WriteLine("\nЕлемент є у списку");
				return;
			}

			else if (middle.data > x)
				first = middle.next;

			else
				last = middle;
		} while (last == null || last != first);

		return;
	}


	public static void Main()
	{
		Console.WriteLine("\n\nЛінійні звʼязні списки");
		Console.WriteLine("Вибір дії");
		Console.WriteLine("1. Ініціалізація списку");
		Console.WriteLine("2. Пошук перебором(грубий пошук)");
		Console.WriteLine("3. Пошук з барʼєром");
		Console.WriteLine("\nЩо будемо виконувати?");
		int key = Convert.ToInt32(Console.ReadLine());
		switch (key)
		{
			case 1: Initialization(); Main(); break;
			case 2: Roughsearch(head); Main(); break;
			case 3: Searchwithbarrier(head); Main(); break;
			case 4: sortList(head); BinarySearch(head); Main(); break;
			default: break;
		}
	
	}
}
